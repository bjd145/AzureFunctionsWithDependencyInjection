{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"cosmosdbAccountName": {
			"type": "string",
			"defaultValue": "[concat('sql-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "Cosmos DB account name"
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for the Cosmos DB account."
			}
		},
		"primaryRegion": {
			"type": "string",
			"metadata": {
				"description": "The primary replica region for the Cosmos DB account."
			}
		},
		"databaseName": {
			"type": "string",
			"metadata": {
				"description": "The name for the SQL database"
			}
		},
		"containerName": {
			"type": "string",
			"defaultValue": "container1",
			"metadata": {
				"description": "The name for the first SQL container"
			}
		},
		"containerPartitionKey": {
			"type": "string",
			"metadata": {
				"description": "The shard key for the container"
			}
		},
		"serviceBusName": {
			"type": "string",
			"metadata": {
				"description": "The namespace name for Service Bus"
			}
		},
		"topicName": {
			"type": "string",
			"metadata": {
				"description": "The topic name in Service Bus"
			}
		},
		"functionAppName": {
			"type": "string",
			"metadata": {
				"description": "The name for the Function App"
			}
		},
		"keyVaultName": {
			"type": "string",
			"metadata": {
				"description": "The name for the Key Vault"
			}
		},
		"objectId": {
			"type": "string",
			"metadata": {
				"description": "The name for the Key Vault"
			}
		}
	},
	"variables": {
		"partitionKeyValue": "Config",
		"accountName": "[toLower(parameters('cosmosdbAccountName'))]",
		"defaultConsistencyLevel": "Session",
		"locations": [
			{
				"locationName": "[parameters('primaryRegion')]",
				"failoverPriority": 0
			}
		],
		"multipleWriteLocations": false,
		"automaticFailover": false,
		"throughput": 400,
		"hostingPlanName": "[parameters('functionAppName')]",
		"storageAccountName": "[concat('storage', uniquestring(resourceGroup().id))]",
		"runtimeStack": "dotnet",
		"timezone": "Central Standard Time",
		"ApplicationInsightsLocation": "South Central US",
		"cosmosConnectionStringSecret": "cosmosdbConnectionString",
		"serviceBusConnectionStringSecret": "serviceBusConnectionString",
		"secretsPermissions": [
			"get",
			"list"
		],
		"adminSecretsPermissions": [
			"all"
		]
	},
	"resources": [
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('accountName')]",
			"apiVersion": "2016-03-31",
			"location": "[parameters('location')]",
			"kind": "GlobalDocumentDB",
			"properties": {
				"consistencyPolicy": "[variables('defaultConsistencyLevel')]",
				"locations": "[variables('locations')]",
				"databaseAccountOfferType": "Standard",
				"enableAutomaticFailover": "[variables('automaticFailover')]",
				"enableMultipleWriteLocations": "[variables('multipleWriteLocations')]"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('databaseName')]"
				}
			}
		},
		{
			"type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
			"name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'), '/', parameters('containerName'))]",
			"apiVersion": "2016-03-31",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'sql', parameters('databaseName'))]"
			],
			"properties": {
				"resource": {
					"id": "[parameters('containerName')]",
					"options": {
						"throughput": "[variables('throughput')]"
					},
					"partitionKey": {
						"paths": [
							"[parameters('containerPartitionKey')]"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [
							{
								"path": "/*",
								"indexes": [
									{
										"kind": "Range",
										"dataType": "number",
										"precision": -1
									},
									{
										"kind": "Range",
										"dataType": "string",
										"precision": -1
									}
								]
							}
						],
						"excludedPaths": [
							{
								"path": "/MyPathToNotIndex/*"
							}
						]
					}
				}
			}
		},
		{
			"apiVersion": "2015-08-01",
			"name": "[parameters('serviceBusName')]",
			"type": "Microsoft.ServiceBus/namespaces",
			"location": "[parameters('location')]",
			"properties": {},
			"resources": [
				{
					"apiVersion": "2015-08-01",
					"name": "[parameters('topicName')]",
					"type": "topics",
					"dependsOn": [
						"[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusName'))]"
					],
					"properties": {
						"path": "[parameters('topicName')]"
					},
					"resources": []
				}
			]
		},
		{
			"name": "[parameters('functionAppName')]",
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-02-01",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
				"[resourceId('Microsoft.Insights/components/', parameters('functionAppName'))]"
			],
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"name": "[parameters('functionAppName')]",
				"clientAffinityEnabled": false,
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
			}
		},
		{
			"name": "[concat(parameters('functionAppName'), '/appsettings')]",
			"type": "Microsoft.Web/sites/config",
			"apiVersion": "2018-02-01",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites/', parameters('functionAppName'))]",
				"[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
			],
			"properties": {
				"FUNCTIONS_WORKER_RUNTIME": "[variables('runtimeStack')]",
				"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2017-06-01').keys[0].value)]",
				"FUNCTIONS_EXTENSION_VERSION": "~2",
				"APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', parameters('functionAppName')), '2018-05-01-preview').InstrumentationKey]",
				"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2017-06-01').keys[0].value)]",
				"WEBSITE_CONTENTSHARE":	"[toLower(parameters('functionAppName'))]",
				"WEBSITE_TIME_ZONE": "[variables('timezone')]",
				"COSMOS_CONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('cosmosConnectionStringSecret')).secretUriWithVersion, ')')]",
				"SERVICEBUS_CONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('serviceBusConnectionStringSecret')).secretUriWithVersion, ')')]",
				"COSMOS_PARTITIONKEY": "[variables('partitionKeyValue')]",
				"COSMOS_COLLECTIONNAME": "[parameters('containerName')]",
				"COSMOS_DATABASENAME": "[parameters('databaseName')]"
			}
		},		
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-11-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[parameters('location')]",
			"properties": {
				"name": "[variables('hostingPlanName')]"
			},
			"sku": {
				"name": "Y1",
				"tier": "Dynamic",
				"size": "Y1",
				"family": "Y",
				"capacity": 0
			}
		},
		{
			"apiVersion": "2017-06-01",
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('storageAccountName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard_LRS"
			}
		},
		{
			"apiVersion": "2018-05-01-preview",
			"name": "[parameters('functionAppName')]",
			"type": "Microsoft.Insights/components",
			"location": "[variables('ApplicationInsightsLocation')]",
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/sites/', parameters('functionAppName')))]": "Resource"
			},
			"properties": {
				"ApplicationId": "[parameters('functionAppName')]"
			}
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"name": "[parameters('keyVaultName')]",
			"location": "[parameters('location')]",
			"apiVersion": "2018-02-14",
			"properties": {
				"enabledForDeployment": true,
				"enabledForTemplateDeployment": true,
				"enabledForDiskEncryption": false,
				"tenantId": "[subscription().tenantId]",
				"accessPolicies": [
					{
						"tenantId": "[subscription().tenantId]",
						"objectId": "[parameters('objectId')]",
						"permissions": {
							"secrets": "[variables('adminSecretsPermissions')]"
						}
					},
					{
						"tenantId": "[subscription().tenantId]",
						"objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2018-11-01', 'Full').identity.principalId]",
						"permissions": {
							"secrets": "[variables('secretsPermissions')]"
						}
					}
				],
				"sku": {
					"name": "Standard",
					"family": "A"
				},
				"networkAcls": {
					"value": {
						"defaultAction": "Allow",
						"bypass": "AzureServices"
					}
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]",
				"[resourceId('Microsoft.ServiceBus/namespaces/', parameters('serviceBusName'))]",
				"[resourceId('Microsoft.Web/sites/', parameters('functionAppName'))]",
			]
		},
		{
			"type": "Microsoft.KeyVault/vaults/secrets",
			"name": "[concat(parameters('keyVaultName'), '/', variables('cosmosConnectionStringSecret'))]",
			"apiVersion": "2018-02-14",
			"dependsOn": [
				"[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
			],
			"properties": {
				"value": "[concat('AccountEndpoint=https://', variables('accountName'), '.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey)]"
			}
		},
		{
			"type": "Microsoft.KeyVault/vaults/secrets",
			"name": "[concat(parameters('keyVaultName'), '/', variables('serviceBusConnectionStringSecret'))]",
			"apiVersion": "2018-02-14",
			"dependsOn": [
				"[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
			],
			"properties": {
				"value": "[listKeys(resourceId(concat('Microsoft.ServiceBus/namespaces/AuthorizationRules'),parameters('serviceBusName'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
			}
		}
	],
	"outputs": {
		"outputs": {
			"type": "string",
			"value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2018-11-01', 'Full').identity.tenantId]"
		}
	}
}